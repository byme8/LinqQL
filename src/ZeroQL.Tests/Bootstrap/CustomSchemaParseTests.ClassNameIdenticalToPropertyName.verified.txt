// 826a2443d318bf74bf2707853cb8c755
// <auto-generated>
// This file generated for ZeroQL 1.0.0.0.
//
// Do not modify this file manually. Any changes will be lost after regeneration.
// <auto-generated/>
#pragma warning disable 8618, CS8603, CS1066
#nullable enable
namespace TestApp
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text.Json.Serialization;
    using System.Text.Json.Nodes;
    using System.Text.Json;
    using ZeroQL;
    using ZeroQL.Json;

    public class GraphQLClient : global::ZeroQL.GraphQLClient<Query, ZeroQL.Unit>
    {
        private static IZeroQLSerializer DefaultSerializer { get; } = GraphQLClientJsonInitializer.CreateSerializer();

        public GraphQLClient(
            global::System.Net.Http.HttpClient client,
            IZeroQLSerializer? options = null,
            PipelineType pipelineType = PipelineType.Full)
            : base(client, options ?? DefaultSerializer, pipelineType)
        {
        }

        public GraphQLClient(
            global::ZeroQL.IHttpHandler client,
            IZeroQLSerializer? options = null,
            PipelineType pipelineType = PipelineType.Full)
            : base(client, options ?? DefaultSerializer, pipelineType)
        {
        }
    }

    [ZeroQL.GraphQLType("Container")]
    [System.CodeDom.Compiler.GeneratedCode("ZeroQL", "1.0.0.0")]
    public class Container
    {
        [JsonPropertyName("limit")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public LimitZeroQL __Limit { get; set; }

        [ZeroQL.GraphQLName("limit")]
        public T Limit<T>(Func<LimitZeroQL, T> selector = default!)
        {
            return __Limit is null ? throw new NullReferenceException("Limit is null but it should not be null. Schema can be outdated.") : selector(__Limit);
        }
    }

    [ZeroQL.GraphQLType("Limit")]
    [System.CodeDom.Compiler.GeneratedCode("ZeroQL", "1.0.0.0")]
    public class LimitZeroQL
    {
        [ZeroQL.GraphQLName("limit")]
        [JsonPropertyName("limit")]
        public long? Limit { get; set; }
    }

    [ZeroQL.GraphQLType("Query")]
    [System.CodeDom.Compiler.GeneratedCode("ZeroQL", "1.0.0.0")]
    public class Query : global::ZeroQL.Internal.IQuery
    {
        [JsonPropertyName("perVariant")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public LimitZeroQL __PerVariant { get; set; }

        [ZeroQL.GraphQLName("perVariant")]
        public T PerVariant<T>(Func<LimitZeroQL, T> selector = default!)
        {
            return __PerVariant is null ? throw new NullReferenceException("PerVariant is null but it should not be null. Schema can be outdated.") : selector(__PerVariant);
        }

        [JsonPropertyName("maybePerVariant")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public LimitZeroQL? __MaybePerVariant { get; set; }

        [ZeroQL.GraphQLName("maybePerVariant")]
        public T? MaybePerVariant<T>(Func<LimitZeroQL, T> selector = default!)
        {
            return __MaybePerVariant is null ? default : selector(__MaybePerVariant);
        }

        [JsonPropertyName("perVariants")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public LimitZeroQL[] __PerVariants { get; set; }

        [ZeroQL.GraphQLName("perVariants")]
        public T[] PerVariants<T>(Func<LimitZeroQL, T> selector = default!)
        {
            return __PerVariants is null ? throw new NullReferenceException("PerVariants is null but it should not be null. Schema can be outdated.") : __PerVariants.Select(o => o is null ? throw new NullReferenceException("PerVariants is null but it should not be null. Schema can be outdated.") : selector(o)).ToArray();
        }

        [JsonPropertyName("maybePerVariants")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public LimitZeroQL[]? __MaybePerVariants { get; set; }

        [ZeroQL.GraphQLName("maybePerVariants")]
        public T[]? MaybePerVariants<T>(Func<LimitZeroQL, T> selector = default!)
        {
            return __MaybePerVariants?.Select(o => o is null ? throw new NullReferenceException("MaybePerVariants is null but it should not be null. Schema can be outdated.") : selector(o)).ToArray();
        }

        [JsonPropertyName("limit")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Container __Limit { get; set; }

        [ZeroQL.GraphQLName("limit")]
        public T Limit<T>(Func<Container, T> selector = default!)
        {
            return __Limit is null ? throw new NullReferenceException("Limit is null but it should not be null. Schema can be outdated.") : selector(__Limit);
        }

        [JsonPropertyName("limits")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Container[] __Limits { get; set; }

        [ZeroQL.GraphQLName("limits")]
        public T[] Limits<T>(Func<Container, T> selector = default!)
        {
            return __Limits is null ? throw new NullReferenceException("Limits is null but it should not be null. Schema can be outdated.") : __Limits.Select(o => o is null ? throw new NullReferenceException("Limits is null but it should not be null. Schema can be outdated.") : selector(o)).ToArray();
        }

        [JsonPropertyName("userIds")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public long[] __UserIds { get; set; }

        [ZeroQL.GraphQLName("userIds")]
        public long[] UserIds([ZeroQL.GraphQLType("Limit!")] LimitZeroQL limit = default!)
        {
            return __UserIds;
        }
    }

    internal static class GraphQLClientJsonInitializer
    {
        public static IZeroQLSerializer Configure(Action<JsonSerializerOptions> optionsFactory)
        {
            var options = CreateOptions();
            optionsFactory(options);

            return new ZeroQLSystemJsonSerializer(options);
        }

        public static IZeroQLSerializer CreateSerializer(JsonSerializerOptions? options = null)
        {
            return new ZeroQLSystemJsonSerializer(options ?? CreateOptions());
        }

        public static JsonSerializerOptions CreateOptions()
        {
            var options = ZeroQLJsonOptions.Create();
            options.TypeInfoResolver = new ZeroQLJsonSerializationContext();
            var converters = new Dictionary<Type, JsonConverter>
            {



            };

            options.Converters.Insert(0, new ZeroQLConverter(converters));
            return options;
        }

    }

#if NET8_0
[global::System.Text.Json.Serialization.JsonSerializable(typeof(ZeroQL.Internal.GraphQLRequest))]
[global::System.Text.Json.Serialization.JsonSerializable(typeof(ZeroQL.GraphQLResponse<Query>))]
[global::System.Text.Json.Serialization.JsonSerializable(typeof(ZeroQL.GraphQLResponse<>))]
[global::System.Text.Json.Serialization.JsonSerializable(typeof(Dictionary<string, object>))]
    internal partial class ZeroQLJsonSerializationContext : JsonSerializerContext
    {
        
    }
#endif
}